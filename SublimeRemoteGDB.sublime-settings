{
    // Immediately run the target upload connecting
    // When attaching to a remote program, you
    // may want to set this to false 
    "run_after_init": true,

    // Attempt to update stack information while the program is running
    // If your remote target does not support non-stop, set this to false
    "update_while_running" : true,

    // Attach to a remote target?  This is needed here because "-gdb-set target-async 1" must be
    // done prior to attaching
    "attach_cmd" : "notset",

    // For the larger binaries with lot of shared libraries
    // the loading within the gdb could take much longer.
    // Configure the thread wait timeout by setting gdb_timeout
    "gdb_timeout": 20,

    // Define debugging window layout (window split)
    // first define column/row separators, then refer to them to define cells
    "layout":
    {
        "cols": [0.0, 0.33, 0.66, 1.0],
        "rows": [0.0, 0.75, 1.0],
        "cells":
        [ // c1 r1 c2 r2
            [0, 0, 3, 1], // -> (0.00, 0.00), (1.00, 0.75)
            [0, 1, 1, 2], // -> (0.00, 0.75), (0.33, 1.00)
            [1, 1, 2, 2], // -> (0.33, 0.75), (0.66, 1.00)
            [2, 1, 3, 2]  // -> (0.66, 0.75), (1.00, 1.00)
        ]
    },

    // visual stuff
    "breakpoint_scope": "keyword.gdb",
    "breakpoint_icon": "circle",
    "position_scope": "entity.name.class",
    "position_icon": "bookmark",
    "changed_variable_scope": "entity.name.class",
    "changed_variable_icon": "",

    // The group used for opening files
    "file_group": 0,

    "session_group": 1,
    "session_open": false,

    "console_group": 1,
    "console_open": true,

    "variables_group": 1,
    "variables_open": false,

    "callstack_group": 2,
    "callstack_open": true,

    "registers_group": 2,
    "registers_open": false,

    "disassembly_group": 2,
    "disassembly_open": false,
    // Set to "intel" for intel disassembly flavor. All other
    // values default to using "att" flavor.
    "disassembly_flavor": "intel",

    "threads_group": 3,
    "threads_open": true,

    "breakpoints_group": 3,
    "breakpoints_open": true,

    // If set to true will push the layout before debugging
    // and pop it when debugging ends
    "push_pop_layout": true,

    // If set to true will close the gdb views when the
    // debugging session ends
    "close_views": true,

    // File to optionally write all the raw data read from and written to the gdb session and the inferior program.
    // Setting it to "stdout" will write the output to the python console
    "debug_file": "stdout",

    // Add "pending breakpoints" for symbols that are dynamically loaded from
    // external shared libraries
    "debug_ext" : false,

    // Whether to log the raw data read from and written to the gdb session and the inferior program.
    "debug": true,

    // Disables showing the error message dialog when something goes wrong
    "i_know_how_to_use_gdb_thank_you_very_much": false,
    
     "colors": [
   {
      "regex": "note",
      "icon": "Packages/Highlight Build Errors/information.png"
    },
    {
      "regex": "warning",
      "scope": "invalid",
      "display": "outline",
      "icon": "Packages/Highlight Build Errors/warning.png"
    },
    {
      // default color, when none of the above matches
      "scope": "invalid",
      "display": "fill",
      "icon": "Packages/Highlight Build Errors/error.png"
    }
  ]
}
